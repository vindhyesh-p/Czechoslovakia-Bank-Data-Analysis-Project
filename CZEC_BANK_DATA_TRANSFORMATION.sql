
*************************************************************************************
ADDING AGE COLUMN IN CLIENT TABLE
**************************************************************************************

ALTER TABLE CLIENT
ADD COLUMN AGE INT;

UPDATE CLIENT
SET AGE = DATEDIFF('YEAR',BIRTH_DATE,'2022-12-31');

SELECT 
SUM(CASE WHEN SEX = 'Male' THEN 1 END) AS MALE_COUNT,
SUM(CASE WHEN SEX = 'Female' THEN 1 END) AS FEMALE_COUNT
FROM CLIENT


DROP TABLE TRANSACTIONS;

SELECT COUNT(*) FROM BANK.PUBLIC.TRANSACTIONS
SELECT COUNT(*) FROM BANK.PUBLIC.TRANSACTIONS111


INSERT INTO TRANSACTIONS(trans_id,account_id,`Date`,Type,operation,amount,balance,Purpose,bank,account_partern_id)
SELECT trans_id, account_id, `Date`, Type, operation, amount, balance, Purpose, bank, account_partern_id
FROM TRANSACTIONS111;

DROP TABLE TRANSACTIONS111

SELECT * FROM TRANSACTIONS WHERE BANK IS NULL AND YEAR(`DATE`) = '2016';

SELECT YEAR(`DATE`) AS TXN_YEAR , COUNT(*) AS TOT_TXNS
FROM TRANSACTIONS
WHERE BANK IS NULL
GROUP BY 1
ORDER BY 1;

SELECT COUNT(*) FROM TRANSACTIONS


*************************************************************************************
TRANSFORMING YEAR AS PER REQUIREMENT
**************************************************************************************

SELECT *,
CASE
    WHEN YEAR(`DATE`) IN ('2016','2017','2018') THEN DATEADD(YEAR,2,`DATE`)
    WHEN YEAR(`DATE`) IN ('2020','2021') THEN DATEADD(YEAR,1,`DATE`)
END AS DATE_NEW
FROM TRANSACTIONS;


SELECT YEAR(`DATE`),COUNT(*) AS TOTAL FROM TRANSACTIONS
GROUP BY 1
ORDER BY 1 DESC;


UPDATE TRANSACTIONS
SET `DATE` = DATEADD(YEAR,1,`DATE`) WHERE YEAR(`DATE`) = '2016';

SELECT MIN(`DATE`), MAX(`DATE`) FROM TRANSACTIONS;


*******************************************************************************
FILL ALL NULL VALUES
**************************************************************************************


UPDATE TRANSACTIONS
SET BANK = 'SKY BANK' WHERE BANK IS NULL AND YEAR(`DATE`) = '2022';

UPDATE TRANSACTIONS
SET BANK = 'DBS BANK' WHERE BANK IS NULL AND YEAR(`DATE`) = '2021';

UPDATE TRANSACTIONS
SET BANK = 'NORTHERN BANK' WHERE BANK IS NULL AND YEAR(`DATE`) = '2019';

UPDATE TRANSACTIONS
SET BANK = 'SOUTHERN BANK' WHERE BANK IS NULL AND YEAR(`DATE`) = '2018';

UPDATE TRANSACTIONS
SET BANK = 'ADB BANK' WHERE BANK IS NULL AND YEAR(`DATE`) = '2017';


SELECT COUNT(*) FROM TRANSACTIONS;

SELECT * FROM CARD;

SELECT DISTINCT YEAR(ISSUED) FROM CARD;

SELECT * FROM ACCOUNT;

SELECT DISTINCT YEAR(DATE) FROM ACCOUNT;


*************************************************************************************
CREATING THE CZECH_DEMOGRAPHIC TABLE 
**************************************************************************************

CREATE OR REPLACE TABLE CZECH_DEMOGRAPHIC_DATA AS
SELECT C.DISTRICT_ID, D.DISTRICT_NAME, D.AVERAGE_SALARY, ROUND(AVG(C.AGE),0) AS AVG_AGE,
SUM(CASE WHEN C.SEX = 'Male' THEN 1 END) AS MALE_CLIENT,
SUM(CASE WHEN C.SEX = 'Female' THEN 1 END) AS FEMALE_CLIENT,
ROUND((FEMALE_CLIENT/MALE_CLIENT)*100,2) AS MALE_FEMALE_RATIO,
COUNT(*) AS TOTAL_CLIENT
FROM CLIENT AS C
INNER JOIN DISTRICT AS D 
ON C.DISTRICT_ID = D.DISTRICT_CODE
GROUP BY 1,2,3
ORDER BY 1;

SELECT * FROM CZECH_DEMOGRAPHIC_DATA;

*************************************************************************************
CREATING THE TABLE WITH LATEST TRANSACTION AND BALANCE
**************************************************************************************

CREATE OR REPLACE TABLE ACC_LATEST_TXNS_WITH_BALANCE 
AS
SELECT LTD.*,TXN.BALANCE
FROM TRANSACTIONS AS TXN
INNER JOIN 
(
   SELECT ACCOUNT_ID,YEAR(`DATE`) AS TXN_YEAR,
   MONTH(`DATE`) AS TXN_MONTH,
   MAX(`DATE`) AS LATEST_TXN_DATE
   FROM TRANSACTIONS
   GROUP BY 1,2,3
   ORDER BY 1,2,3

) AS LTD ON TXN.ACCOUNT_ID = LTD.ACCOUNT_ID AND TXN.`DATE` = LTD.LATEST_TXN_DATE
WHERE TXN.TYPE = 'Credit'
ORDER BY TXN.ACCOUNT_ID,LTD.TXN_YEAR,LTD.TXN_MONTH;

select * from ACC_LATEST_TXNS_WITH_BALANCE;



*************************************************************************************
CREATING THE TABLE BANKING KPI 
**************************************************************************************

CREATE OR REPLACE TABLE BANKING_KPI AS
SELECT  ALWB.TXN_YEAR , ALWB.TXN_MONTH,T.BANK,A.ACCOUNT_TYPE,

COUNT(DISTINCT ALWB.ACCOUNT_ID) AS TOT_ACCOUNT, 
COUNT(DISTINCT T.TRANS_ID) AS TOT_TXNS,
COUNT(CASE WHEN T.TYPE = 'Credit' THEN 1 END) AS DEPOSIT_COUNT ,
COUNT(CASE WHEN T.TYPE = 'Withdrawal' THEN 1 END) AS WITHDRAWAL_COUNT,

SUM(ALWB.BALANCE) AS TOT_BALANCE,

ROUND((DEPOSIT_COUNT / TOT_TXNS) * 100,2)  BANK.PUBLIC.CZECH_DEMOGRAPHIC_DATAAS DEPOSIT_PERC ,
ROUND((WITHDRAWAL_COUNT / TOT_TXNS) * 100,2) AS WITHDRAWAL_PERC ,
NVL(TOT_BALANCE / TOT_ACCOUNT,0) AS AVG_BALANCE,

ROUND(TOT_TXNS/TOT_ACCOUNT,0) AS TPA

FROM TRANSACTIONS AS T
INNER JOIN  ACC_LATEST_TXNS_WITH_BALANCE AS ALWB ON T.ACCOUNT_ID = ALWB.ACCOUNT_ID
LEFT OUTER JOIN  ACCOUNT AS A ON T.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4;


select * from BANKING_KPI;
